<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>MainWindow</class>
 <widget class="QMainWindow" name="MainWindow">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>1200</width>
    <height>920</height>
   </rect>
  </property>
  <property name="sizePolicy">
   <sizepolicy hsizetype="Expanding" vsizetype="Expanding">
    <horstretch>0</horstretch>
    <verstretch>0</verstretch>
   </sizepolicy>
  </property>
  <property name="windowTitle">
   <string>Andor GUI</string>
  </property>
  <property name="styleSheet">
   <string notr="true">QMainWindow{
font: 75 13pt &quot;Times New Roman&quot;;
background-color:rgb(67, 67, 67);
}</string>
  </property>
  <widget class="QWidget" name="centralwidget">
   <property name="minimumSize">
    <size>
     <width>1200</width>
     <height>920</height>
    </size>
   </property>
   <layout class="QHBoxLayout" name="horizontalLayout">
    <item>
     <layout class="QGridLayout" name="gridLayout" rowstretch="0,0,0,0,0,0">
      <item row="0" column="0" rowspan="2" colspan="2">
       <widget class="GraphicsLayoutWidget" name="widgetFrame" native="true">
        <property name="sizePolicy">
         <sizepolicy hsizetype="Preferred" vsizetype="Minimum">
          <horstretch>0</horstretch>
          <verstretch>0</verstretch>
         </sizepolicy>
        </property>
        <property name="minimumSize">
         <size>
          <width>540</width>
          <height>540</height>
         </size>
        </property>
        <property name="maximumSize">
         <size>
          <width>19000</width>
          <height>19000</height>
         </size>
        </property>
        <property name="styleSheet">
         <string notr="true"/>
        </property>
       </widget>
      </item>
      <item row="2" column="0">
       <layout class="QHBoxLayout" name="horizontalLayout_4">
        <item>
         <widget class="QLabel" name="label_2">
          <property name="styleSheet">
           <string notr="true">QLabel {
    color: rgb(255, 255, 255); /* Couleur du texte (blanc) */
    font-family: Arial, sans-serif; /* Police de caractères */
    font-size: 16px; /* Taille de la police */
    font-weight: bold; /* Gras */
    padding: 5px; /* Marge intérieure */
}

#customLabel {
    background-color: rgb(40, 40, 40); /* Couleur de fond */
    border-radius: 5px; /* Coins arrondis */
    padding: 10px; /* Marge intérieure */
}
</string>
          </property>
          <property name="text">
           <string>Acquisition</string>
          </property>
         </widget>
        </item>
        <item>
         <spacer name="horizontalSpacer">
          <property name="orientation">
           <enum>Qt::Horizontal</enum>
          </property>
          <property name="sizeHint" stdset="0">
           <size>
            <width>40</width>
            <height>20</height>
           </size>
          </property>
         </spacer>
        </item>
        <item>
         <widget class="QPushButton" name="pushButton_start_acq">
          <property name="styleSheet">
           <string notr="true">QPushButton {
	
	font: 75 14pt &quot;Arial&quot;;
    background-color: rgb(40, 40, 40);  /* Nouvelle couleur de fond (gris foncé) */
    color: white;  /* Couleur du texte */
    border: 1px solid rgb(100, 100, 100);  /* Bordure */
    border-radius: 9px;  /* Coins arrondis */
    padding: 5px 20px;  /* Marge intérieure */
    min-height: 20px;  /* Hauteur minimale */
}

QPushButton:hover {
    background-color: rgb(50, 50, 50);  /* Nouvelle couleur de fond au survol (gris légèrement plus clair) */
}

QPushButton:pressed {
    background-color: rgb(30, 30, 30);  /* Nouvelle couleur de fond lors du clic (gris plus foncé) */
    border: 1px solid rgb(80, 80, 80);  /* Bordure au clic */
}

</string>
          </property>
          <property name="text">
           <string>Start</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QPushButton" name="pushButton_stop_acq">
          <property name="styleSheet">
           <string notr="true">QPushButton {
	font: 14pt &quot;Arial&quot;;
    background-color: rgb(40, 40, 40);  /* Nouvelle couleur de fond (gris foncé) */
    color: white;  /* Couleur du texte */
    border: 1px solid rgb(100, 100, 100);  /* Bordure */
    border-radius: 9px;  /* Coins arrondis */
    padding: 5px 20px;  /* Marge intérieure */
    min-height: 20px;  /* Hauteur minimale */
}

QPushButton:hover {
    background-color: rgb(50, 50, 50);  /* Nouvelle couleur de fond au survol (gris légèrement plus clair) */
}

QPushButton:pressed {
    background-color: rgb(30, 30, 30);  /* Nouvelle couleur de fond lors du clic (gris plus foncé) */
    border: 1px solid rgb(80, 80, 80);  /* Bordure au clic */
}

</string>
          </property>
          <property name="text">
           <string>Stop</string>
          </property>
         </widget>
        </item>
       </layout>
      </item>
      <item row="2" column="1">
       <widget class="QPushButton" name="pushButton_shot">
        <property name="styleSheet">
         <string notr="true">QPushButton {
	font: 14pt &quot;Arial&quot;;
    background-color: rgb(70, 30, 40);  /* Nouvelle couleur de fond (gris foncé) */
    color: white;  /* Couleur du texte */
    border: 1px solid rgb(100, 100, 100);  /* Bordure */
    border-radius: 9px;  /* Coins arrondis */
    padding: 5px 20px;  /* Marge intérieure */
    min-height: 20px;  /* Hauteur minimale */
}

QPushButton:hover {
    background-color: rgb(50, 50, 50);  /* Nouvelle couleur de fond au survol (gris légèrement plus clair) */
}

QPushButton:pressed {
    background-color: rgb(30, 30, 30);  /* Nouvelle couleur de fond lors du clic (gris plus foncé) */
    border: 1px solid rgb(80, 80, 80);  /* Bordure au clic */
}

</string>
        </property>
        <property name="text">
         <string>Shot</string>
        </property>
       </widget>
      </item>
      <item row="3" column="0">
       <layout class="QHBoxLayout" name="horizontalLayout_3">
        <item>
         <widget class="QLabel" name="label">
          <property name="sizePolicy">
           <sizepolicy hsizetype="Fixed" vsizetype="Preferred">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
          <property name="maximumSize">
           <size>
            <width>92</width>
            <height>16777215</height>
           </size>
          </property>
          <property name="styleSheet">
           <string notr="true">QLabel {
    color: rgb(255, 255, 255); /* Couleur du texte (blanc) */
    font-family: Arial, sans-serif; /* Police de caractères */
    font-size: 16px; /* Taille de la police */
    font-weight: bold; /* Gras */
    padding: 5px; /* Marge intérieure */
}

#customLabel {
    background-color: rgb(40, 40, 40); /* Couleur de fond */
    border-radius: 5px; /* Coins arrondis */
    padding: 10px; /* Marge intérieure */
}
</string>
          </property>
          <property name="text">
           <string>Exposure: </string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QDoubleSpinBox" name="doubleSpinBox_exposure">
          <property name="maximumSize">
           <size>
            <width>125</width>
            <height>16777215</height>
           </size>
          </property>
          <property name="styleSheet">
           <string notr="true">QDoubleSpinBox {
	font: 14pt &quot;Arial&quot;;
    background-color: rgb(30, 50, 70);  /* Couleur de fond (bleu foncé) */
    color: white;  /* Couleur du texte */
    border: 1px solid rgb(70, 100, 120);  /* Bordure */
    border-radius: 5px;  /* Coins arrondis */
    padding: 3px 5px;  /* Marge intérieure */
    min-height: 20px;  /* Hauteur minimale */
}

QDoubleSpinBox::up-button, QDoubleSpinBox::down-button {
    background-color: rgb(40, 60, 80);  /* Couleur de fond des boutons */
    color: white;  /* Couleur du texte */
    border: 1px solid rgb(70, 100, 120);  /* Bordure */
    border-radius: 5px;  /* Coins arrondis */
    width: 10px;  /* Largeur des boutons */
    height: 10px;  /* Hauteur des boutons */
}

QDoubleSpinBox::up-button:hover, QDoubleSpinBox::down-button:hover {
    background-color: rgb(50, 70, 90);  /* Couleur de fond des boutons au survol */
}
</string>
          </property>
          <property name="decimals">
           <number>5</number>
          </property>
          <property name="maximum">
           <double>200.000000000000000</double>
          </property>
          <property name="singleStep">
           <double>0.100000000000000</double>
          </property>
          <property name="value">
           <double>20.000000000000000</double>
          </property>
         </widget>
        </item>
        <item>
         <spacer name="horizontalSpacer_2">
          <property name="orientation">
           <enum>Qt::Horizontal</enum>
          </property>
          <property name="sizeType">
           <enum>QSizePolicy::MinimumExpanding</enum>
          </property>
          <property name="sizeHint" stdset="0">
           <size>
            <width>40</width>
            <height>20</height>
           </size>
          </property>
         </spacer>
        </item>
        <item>
         <widget class="QPushButton" name="pushButtonArm">
          <property name="sizePolicy">
           <sizepolicy hsizetype="Minimum" vsizetype="Minimum">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
          <property name="maximumSize">
           <size>
            <width>16777215</width>
            <height>25</height>
           </size>
          </property>
          <property name="styleSheet">
           <string notr="true">QPushButton {
	font: 14pt &quot;Arial&quot;;
    background-color: rgb(40, 40, 40);  /* Nouvelle couleur de fond (gris foncé) */
    color: white;  /* Couleur du texte */
    border: 1px solid rgb(100, 100, 100);  /* Bordure */
    border-radius: 9px;  /* Coins arrondis */
    padding: 5px 20px;  /* Marge intérieure */
    min-height: 20px;  /* Hauteur minimale */
}

QPushButton:hover {
    background-color: rgb(50, 50, 50);  /* Nouvelle couleur de fond au survol (gris légèrement plus clair) */
}

QPushButton:pressed {
    background-color: rgb(30, 30, 30);  /* Nouvelle couleur de fond lors du clic (gris plus foncé) */
    border: 1px solid rgb(80, 80, 80);  /* Bordure au clic */
}

</string>
          </property>
          <property name="text">
           <string>Arm</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QPushButton" name="pushButton_disarm">
          <property name="enabled">
           <bool>true</bool>
          </property>
          <property name="sizePolicy">
           <sizepolicy hsizetype="Fixed" vsizetype="Minimum">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
          <property name="minimumSize">
           <size>
            <width>0</width>
            <height>32</height>
           </size>
          </property>
          <property name="maximumSize">
           <size>
            <width>16777215</width>
            <height>25</height>
           </size>
          </property>
          <property name="styleSheet">
           <string notr="true">QPushButton {
	font: 14pt &quot;Arial&quot;;
    background-color: rgb(40, 40, 40);  /* Nouvelle couleur de fond (gris foncé) */
    color: white;  /* Couleur du texte */
    border: 1px solid rgb(100, 100, 100);  /* Bordure */
    border-radius: 9px;  /* Coins arrondis */
    padding: 5px 20px;  /* Marge intérieure */
    min-height: 20px;  /* Hauteur minimale */
}

QPushButton:hover {
    background-color: rgb(50, 50, 50);  /* Nouvelle couleur de fond au survol (gris légèrement plus clair) */
}

QPushButton:pressed {
    background-color: rgb(30, 30, 30);  /* Nouvelle couleur de fond lors du clic (gris plus foncé) */
    border: 1px solid rgb(80, 80, 80);  /* Bordure au clic */
}

</string>
          </property>
          <property name="text">
           <string>Disarm</string>
          </property>
         </widget>
        </item>
       </layout>
      </item>
      <item row="3" column="1">
       <widget class="QPushButton" name="pushButton_normalisation">
        <property name="styleSheet">
         <string notr="true">QPushButton {
	font: 14pt &quot;Arial&quot;;
    background-color: rgb(40, 40, 40);  /* Nouvelle couleur de fond (gris foncé) */
    color: white;  /* Couleur du texte */
    border: 1px solid rgb(100, 100, 100);  /* Bordure */
    border-radius: 9px;  /* Coins arrondis */
    padding: 5px 20px;  /* Marge intérieure */
    min-height: 20px;  /* Hauteur minimale */
}

QPushButton:hover {
    background-color: rgb(50, 50, 50);  /* Nouvelle couleur de fond au survol (gris légèrement plus clair) */
}

QPushButton:pressed {
    background-color: rgb(30, 30, 30);  /* Nouvelle couleur de fond lors du clic (gris plus foncé) */
    border: 1px solid rgb(80, 80, 80);  /* Bordure au clic */
}

</string>
        </property>
        <property name="text">
         <string>Normalisation</string>
        </property>
       </widget>
      </item>
      <item row="4" column="0">
       <layout class="QHBoxLayout" name="horizontalLayout_2">
        <item>
         <widget class="QLabel" name="label_external_trig">
          <property name="styleSheet">
           <string notr="true">QLabel {
    color: rgb(255, 255, 255); /* Couleur du texte (blanc) */
    font-family: Arial, sans-serif; /* Police de caractères */
    font-size: 16px; /* Taille de la police */
    font-weight: bold; /* Gras */
    padding: 5px; /* Marge intérieure */
}

#customLabel {
    background-color: rgb(40, 40, 40); /* Couleur de fond */
    border-radius: 5px; /* Coins arrondis */
    padding: 10px; /* Marge intérieure */
}
</string>
          </property>
          <property name="text">
           <string>External trigger mode :</string>
          </property>
         </widget>
        </item>
        <item>
         <spacer name="horizontalSpacer_3">
          <property name="orientation">
           <enum>Qt::Horizontal</enum>
          </property>
          <property name="sizeHint" stdset="0">
           <size>
            <width>40</width>
            <height>20</height>
           </size>
          </property>
         </spacer>
        </item>
        <item>
         <widget class="QPushButton" name="pushButton_start_ext">
          <property name="styleSheet">
           <string notr="true">QPushButton {
	font: 14pt &quot;Arial&quot;;
    background-color: rgb(40, 40, 40);  /* Nouvelle couleur de fond (gris foncé) */
    color: white;  /* Couleur du texte */
    border: 1px solid rgb(100, 100, 100);  /* Bordure */
    border-radius: 9px;  /* Coins arrondis */
    padding: 5px 20px;  /* Marge intérieure */
    min-height: 20px;  /* Hauteur minimale */
}

QPushButton:hover {
    background-color: rgb(50, 50, 50);  /* Nouvelle couleur de fond au survol (gris légèrement plus clair) */
}

QPushButton:pressed {
    background-color: rgb(30, 30, 30);  /* Nouvelle couleur de fond lors du clic (gris plus foncé) */
    border: 1px solid rgb(80, 80, 80);  /* Bordure au clic */
}

</string>
          </property>
          <property name="text">
           <string>Start</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QPushButton" name="pushButton_stop_ext">
          <property name="styleSheet">
           <string notr="true">QPushButton {
	font: 14pt &quot;Arial&quot;;
    background-color: rgb(40, 40, 40);  /* Nouvelle couleur de fond (gris foncé) */
    color: white;  /* Couleur du texte */
    border: 1px solid rgb(100, 100, 100);  /* Bordure */
    border-radius: 9px;  /* Coins arrondis */
    padding: 5px 20px;  /* Marge intérieure */
    min-height: 20px;  /* Hauteur minimale */
}

QPushButton:hover {
    background-color: rgb(50, 50, 50);  /* Nouvelle couleur de fond au survol (gris légèrement plus clair) */
}

QPushButton:pressed {
    background-color: rgb(30, 30, 30);  /* Nouvelle couleur de fond lors du clic (gris plus foncé) */
    border: 1px solid rgb(80, 80, 80);  /* Bordure au clic */
}

</string>
          </property>
          <property name="text">
           <string>Stop</string>
          </property>
         </widget>
        </item>
       </layout>
      </item>
      <item row="5" column="0">
       <layout class="QHBoxLayout" name="horizontalLayout_5">
        <item>
         <widget class="QLabel" name="label_ROI">
          <property name="styleSheet">
           <string notr="true">QLabel {
    color: rgb(255, 255, 255); /* Couleur du texte (blanc) */
    font-family: Arial, sans-serif; /* Police de caractères */
    font-size: 16px; /* Taille de la police */
    font-weight: bold; /* Gras */
    padding: 5px; /* Marge intérieure */
}

#customLabel {
    background-color: rgb(40, 40, 40); /* Couleur de fond */
    border-radius: 5px; /* Coins arrondis */
    padding: 10px; /* Marge intérieure */
}
</string>
          </property>
          <property name="text">
           <string>Camera ROI : </string>
          </property>
         </widget>
        </item>
        <item>
         <spacer name="horizontalSpacer_4">
          <property name="orientation">
           <enum>Qt::Horizontal</enum>
          </property>
          <property name="sizeHint" stdset="0">
           <size>
            <width>40</width>
            <height>20</height>
           </size>
          </property>
         </spacer>
        </item>
        <item>
         <widget class="QPushButton" name="pushButton_setROI">
          <property name="styleSheet">
           <string notr="true">QPushButton {
	font: 14pt &quot;Arial&quot;;
    background-color: rgb(40, 40, 40);  /* Nouvelle couleur de fond (gris foncé) */
    color: white;  /* Couleur du texte */
    border: 1px solid rgb(100, 100, 100);  /* Bordure */
    border-radius: 9px;  /* Coins arrondis */
    padding: 5px 20px;  /* Marge intérieure */
    min-height: 20px;  /* Hauteur minimale */
}

QPushButton:hover {
    background-color: rgb(50, 50, 50);  /* Nouvelle couleur de fond au survol (gris légèrement plus clair) */
}

QPushButton:pressed {
    background-color: rgb(30, 30, 30);  /* Nouvelle couleur de fond lors du clic (gris plus foncé) */
    border: 1px solid rgb(80, 80, 80);  /* Bordure au clic */
}

</string>
          </property>
          <property name="text">
           <string>Set ROI</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QPushButton" name="pushButton_apply_ROI">
          <property name="styleSheet">
           <string notr="true">QPushButton {
	font: 14pt &quot;Arial&quot;;
    background-color: rgb(40, 40, 40);  /* Nouvelle couleur de fond (gris foncé) */
    color: white;  /* Couleur du texte */
    border: 1px solid rgb(100, 100, 100);  /* Bordure */
    border-radius: 9px;  /* Coins arrondis */
    padding: 5px 20px;  /* Marge intérieure */
    min-height: 20px;  /* Hauteur minimale */
}

QPushButton:hover {
    background-color: rgb(50, 50, 50);  /* Nouvelle couleur de fond au survol (gris légèrement plus clair) */
}

QPushButton:pressed {
    background-color: rgb(30, 30, 30);  /* Nouvelle couleur de fond lors du clic (gris plus foncé) */
    border: 1px solid rgb(80, 80, 80);  /* Bordure au clic */
}

</string>
          </property>
          <property name="text">
           <string>Apply ROI</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QPushButton" name="pushButton_clear_ROI">
          <property name="styleSheet">
           <string notr="true">QPushButton {
	font: 14pt &quot;Arial&quot;;
    background-color: rgb(40, 40, 40);  /* Nouvelle couleur de fond (gris foncé) */
    color: white;  /* Couleur du texte */
    border: 1px solid rgb(100, 100, 100);  /* Bordure */
    border-radius: 9px;  /* Coins arrondis */
    padding: 5px 20px;  /* Marge intérieure */
    min-height: 20px;  /* Hauteur minimale */
}

QPushButton:hover {
    background-color: rgb(50, 50, 50);  /* Nouvelle couleur de fond au survol (gris légèrement plus clair) */
}

QPushButton:pressed {
    background-color: rgb(30, 30, 30);  /* Nouvelle couleur de fond lors du clic (gris plus foncé) */
    border: 1px solid rgb(80, 80, 80);  /* Bordure au clic */
}

</string>
          </property>
          <property name="text">
           <string>Clear ROI</string>
          </property>
         </widget>
        </item>
       </layout>
      </item>
     </layout>
    </item>
    <item>
     <layout class="QVBoxLayout" name="verticalLayout_2">
      <item>
       <widget class="GraphicsLayoutWidget" name="widgetBinningFrame" native="true">
        <property name="sizePolicy">
         <sizepolicy hsizetype="Expanding" vsizetype="Preferred">
          <horstretch>0</horstretch>
          <verstretch>0</verstretch>
         </sizepolicy>
        </property>
        <property name="minimumSize">
         <size>
          <width>540</width>
          <height>540</height>
         </size>
        </property>
        <property name="maximumSize">
         <size>
          <width>19000</width>
          <height>19000</height>
         </size>
        </property>
       </widget>
      </item>
      <item>
       <widget class="QTextBrowser" name="textBrowserLogs">
        <property name="sizePolicy">
         <sizepolicy hsizetype="Preferred" vsizetype="Preferred">
          <horstretch>0</horstretch>
          <verstretch>0</verstretch>
         </sizepolicy>
        </property>
        <property name="maximumSize">
         <size>
          <width>16777215</width>
          <height>240</height>
         </size>
        </property>
        <property name="styleSheet">
         <string notr="true">QTextBrowser {
    background-color: rgb(220, 225, 220);  /* Couleur de fond */
    color: rgb(50, 50, 50);  /* Couleur du texte */
    border: 1px solid rgb(200, 200, 200);  /* Bordure */
    border-radius: 5px;  /* Coins arrondis */
    padding: 10px;  /* Marge intérieure */
    font-family: Arial, sans-serif;  /* Police de caractères */
    font-size: 14px;  /* Taille de police */
}

QTextBrowser:focus {
    border-color: rgb(0, 122, 204);  /* Couleur de la bordure lorsqu'il est en focus */
}

QTextBrowser::placeholder {
    color: rgb(150, 150, 150);  /* Couleur du texte de l'espace réservé */
}

QTextBrowser:hover {
    background-color: rgb(245, 245, 245);  /* Couleur de fond au survol */
}
</string>
        </property>
       </widget>
      </item>
     </layout>
    </item>
   </layout>
  </widget>
 </widget>
 <customwidgets>
  <customwidget>
   <class>GraphicsLayoutWidget</class>
   <extends>QWidget</extends>
   <header>pyqtgraph</header>
   <container>1</container>
  </customwidget>
 </customwidgets>
 <resources/>
 <connections/>
</ui>
